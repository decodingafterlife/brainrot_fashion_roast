import streamlit as st
import google.generativeai as genai
from PIL import Image

# Page configuration
st.set_page_config(
    page_title="AI Fashion Roast",
    page_icon="üëî",
    layout="centered"
)

# Check for API key in secrets
if "GOOGLE_API_KEY" not in st.secrets:
    st.error("Please set GOOGLE_API_KEY in your Streamlit secrets!")
    st.stop()

# Configure Google Gemini API
genai.configure(api_key=st.secrets["GOOGLE_API_KEY"])

def get_fashion_roast(image):
    """Generate a fashion roast using Gemini AI"""
    try:
        model = genai.GenerativeModel('gemini-1.5-flash')
        prompt = """You are a fashion critic with a witty sense of humor. 
        Roast this outfit in a funny way. Focus on the style choices, 
        color combinations, and overall look. Keep it under 100 words and make it entertaining."""
        
        response = model.generate_content([prompt, image])
        return response.text
    except Exception as e:
        return f"Error generating roast: {str(e)}"

def main():
    # Page header
    st.title("üî• AI Fashion Roast üëî")
    st.markdown("""
    Upload your outfit photo and let our AI fashion critic roast your style choices!
    Don't take it too seriously - it's all in good fun! üòÑ
    """)
    
    # File uploader
    uploaded_file = st.file_uploader("Choose an outfit photo", type=['jpg', 'jpeg', 'png'])
    
    if uploaded_file is not None:
        try:
            # Display the uploaded image
            image = Image.open(uploaded_file)
            st.image(image, caption="Your outfit", use_column_width=True)
            
            # Generate roast button
            if st.button("Roast My Outfit! üî•"):
                with st.spinner("Analyzing your fashion choices..."):
                    roast = get_fashion_roast(image)
                    
                # Display the roast
                st.markdown("### The Verdict üé≠")
                st.markdown(f">{roast}")
                
        except Exception as e:
            st.error(f"Error processing image: {str(e)}")
    
    # Footer
    st.markdown("---")
    st.markdown("""
    ### About
    This app uses Google's Gemini AI to provide humorous fashion feedback.
    Please note that all comments are generated by AI and should be taken lightly!
    
    Created with ‚ù§Ô∏è using Streamlit and Gemini AI
    """)

if __name__ == "__main__":
    main()
